{"name":"Keypad i2c","tagline":"Keypad I2C interface library for Arduino","body":"# Arduino Keypad I2C interface library #\r\nF4GOJ Christophe f4goj@free.fr September 2014\r\n\r\nMM74C922N datasheet at http://www.ti.com/lit/ds/symlink/mm54c923.pdf<br>\r\nPCF8574 datasheet at http://www.nxp.com/documents/data_sheet/PCF8574.pdf\r\n\r\nUse this library freely.\r\n\r\n![keypad_i2c](https://raw.githubusercontent.com/F4GOJ/Keypad_I2C/master/images/keypad_i2c_sch.png)\r\n\r\n## Hardware connections ##\r\n#####Keypad to Arduino :\r\n\r\n- J1-1 -> D2 or D3\r\n- J1-2 -> +5V\r\n- J1-3 -> A4\r\n- J1-4 -> A5\r\n- J1-5 -> Ground\r\n\r\n#####Expansion I2C port :\r\n\r\n- J2-1 -> Ground\r\n- J2-2 -> SCL\r\n- J2-3 -> SDA\r\n- J2-4 -> +5V\r\n<br><br>\r\n\r\n## Installation ##\r\nTo use the **Keypad_I2C** library:  \r\n- Go to https://github.com/F4GOJ/Keypad_I2C, click the [Download ZIP](https://github.com/F4GOJ/Keypad_I2C/archive/master.zip) button and save the ZIP file to a convenient location on your PC.\r\n- Uncompress the downloaded file.  This will result in a folder containing all the files for the library, that has a name that includes the branch name, usually **Keypad_I2C-master**.\r\n- Rename the folder to  **Keypad_I2C**.\r\n- Copy the renamed folder to the Arduino sketchbook\\libraries folder.\r\n\r\n## Usage notes ##\r\nYou have to instantiate a **my_keypad_name** object.\r\n\r\nKeypad_I2C my_keypad_name(int i2c_addr, int int_pin);\r\n\r\n#####Parameters\r\n**i2c_addr :** I2C address of the interface *(int)*<br>\r\n**int_pin :** Input pin 2 or 3 to attach the interrupt *(int)*\r\n\r\n```c++\r\n#include <Keypad_I2c.h>    //http://github.com/F4GOJ/Keypad_I2C\r\n\r\nKeypad_I2C KPD(0x26, 2);\r\n```\r\n<br><br>\r\n## Functions : ##\r\n###begin()\r\n#####Description\r\nInitialize and attach interrupt to the input pin, begins the wire connection.\r\n#####Syntax\r\n`KPD.begin();`\r\n#####Parameters\r\nNone.\r\n#####Returns\r\nNone.\r\n#####Example\r\n```c++\r\nvoid setup(){\r\n KPD.begin();\r\n}\r\n```\r\n\r\n###getKey()\r\n#####Description\r\nGet key pressed.\r\n#####Syntax\r\n`KPD.getKey();`\r\n#####Parameters\r\nNone.\r\n#####Returns\r\nThe code of the key pressed or 0 if no new key has been pressed. *(char)*\r\n#####Example\r\n```c++\r\nch = KPD.getKey();\r\nif(ch != 0){\r\n Serial.print(ch);\r\n}\r\n```\r\n\r\n###getKeyNum()\r\n#####Description\r\nGet only numerical key pressed.\r\n#####Syntax\r\n`KPD.getKeyNum();`\r\n#####Parameters\r\nNone.\r\n#####Returns\r\nThe code of the numerical key pressed or 0 if no new key has been pressed. *(char)*\r\n#####Example\r\n```c++\r\nch = KPD.getKeyNum();\r\nif(ch != 0){\r\n Serial.print(ch);\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}